from Tkinter import *
import Tkinter, Tkconstants, tkFileDialog

class WorkspaceLauncher(Toplevel):
    def __init__(self, *args, **kargs):
        top = Toplevel()
        top.title("Workspace Launcher")

        dir = "C:"
        entry_1 = Entry(top)
        entry_1.delete(0, END)  # delete current text in entry
        entry_1.insert(0, dir)  # insert
        label_1 = Label(top, text="Select a directory as workspace")
        label_2 = Label(top, text="Workspace")
        button1 = Button(top, text="Browse", command=lambda: browse_dir(entry_1))
        button2 = Button(top, text="Launch")
        button3 = Button(top, text="Cancel", command=top.destroy)

        label_1.grid(row=0, column=1)
        label_2.grid(row=1)
        entry_1.grid(row=1, column=1)
        button1.grid(row=1, column=2)
        button2.grid(row=2, column=1)
        button3.grid(row=2, column=2)

class NewProject(Toplevel):
    def __init__(self, *args, **kargs):
        top = Toplevel()
        top.title("New Project")

        label_1 = Label(top, text="Create a new project")
        label_2 = Label(top, text="Project Name")
        label_3 = Label(top, text="Description")
        entry_1 = Entry(top)
        entry_2 = Entry(top)
        button1 = Button(top, text="Create")
        button2 = Button(top, text="Cancel", command=top.destroy)

        label_1.grid(row=0, column=1)
        label_2.grid(row=1, sticky=E)
        label_3.grid(row=2, sticky=E)
        entry_1.grid(row=1, column=1)
        entry_2.grid(row=2, column=1)
        button1.grid(row=3, column=1, sticky=E)
        button2.grid(row=3, column=2)

class DissectorScript(Toplevel):
    def __init__(self, *args, **kargs):
        top = Toplevel()
        top.title("Dissector Script")

        label_1 = Label(top, text="Generate a custom dissector script")
        label_2 = Label(top, text="Project")
        label_3 = Label(top, text="Dissector Format")
        label_4 = Label(top, text="Save Location")
        entry_1 = Entry(top)
        entry_2 = Entry(top)
        entry_3 = Entry(top)
        button1 = Button(top, text="Browse", command=lambda: open_location(entry_1))
        button2 = Button(top, text="Browse", command=lambda: save_location(entry_3))
        button3 = Button(top, text="Generate")
        button4 = Button(top, text="Cancel", command=top.destroy)

        label_1.grid(row=0, columnspan=3)
        label_2.grid(row=1, sticky=E)
        label_3.grid(row=2, sticky=E)
        label_4.grid(row=3, sticky=E)
        entry_1.grid(row=1, column=1)
        entry_2.grid(row=2, column=1)
        entry_3.grid(row=3, column=1)
        button1.grid(row=1, column=2)
        button2.grid(row=3, column=2)
        button3.grid(row=4, column=1, sticky=E)
        button4.grid(row=4, column=2)

class ProjectImport(Toplevel):
    def __init__(self, *args, **kargs):
        top = Toplevel()
        top.title("Project Import")

        label_1 = Label(top, text="Import a project into the current workspace")
        label_2 = Label(top, text="Project")
        entry_1 = Entry(top)
        button1 = Button(top, text="Browse", command=lambda: browse_dir(entry_1))
        button2 = Button(top, text="Import")
        button3 = Button(top, text="Cancel", command=top.destroy)

        label_1.grid(row=0, columnspan=3)
        label_2.grid(row=1, sticky=E)
        entry_1.grid(row=1, column=1)
        button1.grid(row=1, column=2)
        button2.grid(row=2, column=1)
        button3.grid(row=2, column=2, sticky=E)

class ProjectExport(Toplevel):
    def __init__(self, *args, **kargs):
        top = Toplevel()
        top.title("Project Export")

        label_1 = Label(top, text="Export a project to the local file system")
        label_2 = Label(top, text="Project")
        label_3 = Label(top, text="To export file")
        entry_1 = Entry(top)
        entry_2 = Entry(top)
        button1 = Button(top, text="Browse", command=lambda: browse_dir(entry_1))
        button2 = Button(top, text="Browse", command=lambda: open_location(entry_2))
        button3 = Button(top, text="Export")
        button4 = Button(top, text="Cancel", command=top.destroy)

        label_1.grid(row=0, columnspan=3)
        label_2.grid(row=1, sticky=E)
        label_3.grid(row=2, sticky=E)
        entry_1.grid(row=1, column=1)
        entry_2.grid(row=2, column=1)
        button1.grid(row=1, column=2)
        button2.grid(row=2, column=2)
        button3.grid(row=3, column=1, sticky=E)
        button4.grid(row=3, column=2)

class OrganizeViews(Toplevel):
    def __init__(self, *args, **kargs):
        top = Toplevel()
        top.title("Organize Views")
        v_2 = IntVar()
        v_3 = IntVar()
        v_4 = IntVar()
        v_5 = IntVar()
        v_6 = IntVar()
        v_7 = IntVar()
        v_8 = IntVar()

        label_1 = Label(top, text="Customize the views")
        label_2 = Label(top, text="Project Navigation")
        label_3 = Label(top, text="Dissector Building Area")
        label_4 = Label(top, text="Palette")
        label_5 = Label(top, text="Packet Stream Area")
        label_6 = Label(top, text="Dissected Stream Area")
        label_7 = Label(top, text="Raw Data Area")
        label_8 = Label(top, text="Console Area")
        label_9 = Label(top, text="Hide")
        label_10 = Label(top, text="Show")
        button1 = Button(top, text="Restore to Default")
        button2 = Button(top, text="Confirm", command=top.destroy)
        button3 = Button(top, text="Cancel", command=top.destroy)
        radio_button_hide_2 = Radiobutton(top, variable= v_2 , value=0)
        radio_button_hide_3 = Radiobutton(top, variable= v_3 , value=0)
        radio_button_hide_4 = Radiobutton(top, variable= v_4 , value=0)
        radio_button_hide_5 = Radiobutton(top, variable= v_5 , value=0)
        radio_button_hide_6 = Radiobutton(top, variable= v_6 , value=0)
        radio_button_hide_7 = Radiobutton(top, variable= v_7 , value=0)
        radio_button_hide_8 = Radiobutton(top, variable= v_8 , value=0)
        radio_button_show_2 = Radiobutton(top, variable= v_2 , value=1)
        radio_button_show_3 = Radiobutton(top, variable= v_3 , value=1)
        radio_button_show_4 = Radiobutton(top, variable= v_4 , value=1)
        radio_button_show_5 = Radiobutton(top, variable= v_5 , value=1)
        radio_button_show_6 = Radiobutton(top, variable= v_6 , value=1)
        radio_button_show_7 = Radiobutton(top, variable= v_7 , value=1)
        radio_button_show_8 = Radiobutton(top, variable= v_8 , value=1)
        label_1.grid(row=0, columnspan=3)
        label_9.grid(row=1, column=1)
        label_10.grid(row=1, column=2)
        label_2.grid(row=2)
        label_3.grid(row=3)
        label_4.grid(row=4)
        label_5.grid(row=5)
        label_6.grid(row=6)
        label_7.grid(row=7)
        label_8.grid(row=8)
        radio_button_hide_2.grid(row=2, column=1)
        radio_button_hide_3.grid(row=3, column=1)
        radio_button_hide_4.grid(row=4, column=1)
        radio_button_hide_5.grid(row=5, column=1)
        radio_button_hide_6.grid(row=6, column=1)
        radio_button_hide_7.grid(row=7, column=1)
        radio_button_hide_8.grid(row=8, column=1)
        radio_button_show_2.grid(row=2, column=2)
        radio_button_show_3.grid(row=3, column=2)
        radio_button_show_4.grid(row=4, column=2)
        radio_button_show_5.grid(row=5, column=2)
        radio_button_show_6.grid(row=6, column=2)
        radio_button_show_7.grid(row=7, column=2)
        radio_button_show_8.grid(row=8, column=2)
        button1.grid(row=9, column=1)
        button2.grid(row=9, column=2)
        button3.grid(row=9, column=3)

class PCAP(Toplevel):
    def __init__(self, *args, **kargs):
        top = Toplevel()
        top.title("PCAP")

        entry_1 = Entry(top)
        label_1 = Label(top, text="Open a PCAP file")
        label_2 = Label(top, text="PCAP Name")
        button1 = Button(top, text="Browse", command=lambda: open_location(entry_1))
        button2 = Button(top, text="Open")
        button3 = Button(top, text="Cancel", command=top.destroy)

        label_1.grid(row=0, columnspan=3)
        label_2.grid(row=1)
        entry_1.grid(row=1, column=1)
        button1.grid(row=1, column=2)
        button2.grid(row=2, column=1)
        button3.grid(row=2, column=2)

def main():
    root = Tk()
    #WorkspaceLauncher(root)
    #NewProject(root)
    #DissectorScript(root)
    #ProjectImport(root)
    #ProjectExport(root)
    OrganizeViews(root)
    #PCAP(root)
    root.mainloop()

def browse_dir(e):
    directory = tkFileDialog.askdirectory()
    dir = directory
    e.delete(0, END)
    e.insert(0, dir)

def save_location(e):
    filename = tkFileDialog.asksaveasfilename(initialdir="/", title="Select file",
                                                   filetypes=(("all files", ".*"), ("all files", "*.*")))
    e.delete(0, END)
    e.insert(0, filename)

def open_location(e):
    filename = tkFileDialog.askopenfilename(initialdir="/", title="Select file",
                                                 filetypes=(("all files", ".*"), ("all files", "*.*")))
    e.delete(0, END)
    e.insert(0, filename)

main()
